/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package adisys.server.boundary;

import adisys.server.strumenti.Record;
import adisys.server.strumenti.VariableTableModel;
import business.intervento.InterventoTO;
import business.intervento.TipoIntervento;
import business.patologia.PatologiaTO;
import messaggistica.GMessage;
import messaggistica.MainException;
import integration.dao.InterventoMySqlDAO;
import integration.dao.PatologiaMySqlDAO;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import presentation.FrontController;
import presentation.RequestManager;
/**
*
* @author Gianmarco Divittorio
* @author Nicola Gazzilli
*/

public class DialogoStorico extends javax.swing.JDialog implements Boundary {
    
    private FrontController FC;
    private static EditorInfermieri tmp;
    private static String COLUMN_CODE_NAME;
    private static String COLUMN_NAME;
    private static String SEVERITY_COLUMN_NAME;
    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel headerRipPathologiesPic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel labelInterventi;
    private javax.swing.JLabel labelPatologie;
    private javax.swing.JLabel labelTipi;
    private javax.swing.JButton pulsanteEsci;
    private javax.swing.JButton pulsanteEsci1;
    private javax.swing.JButton pulsanteHome;
    private javax.swing.JTable tabellaInterventi;
    private javax.swing.JTable tabellaPatologie;
    private javax.swing.JTable tabellaTipi;
    // End of variables declaration  
    
    private static ResourceBundle registerDialog = ResourceBundle.getBundle("adisys/server/property/DialogoStorico");
    public static void setResourceBundle(String path, Locale local){
    	registerDialog = ResourceBundle.getBundle(path, local);
    }
    
    public static void setNursesEditor(EditorInfermieri nursesEditor){
        tmp = nursesEditor;
    }

	/**
	 * Creates new form dialogoPatologieTipoIntervento
	 */
    
	public DialogoStorico(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
                try {
                    initComponents();
                    updateTable();
                    getEmptyTypesModel();
                    getEmptyPathologiesModel();
                } catch (MainException ex) {
                    Logger.getLogger(DialogoStorico.class.getName()).log(Level.SEVERE, null, ex);
                }
	}
        
        public DialogoStorico(){
            
        }
        
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

		headerRipPathologiesPic = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabellaInterventi = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabellaTipi = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabellaPatologie = new javax.swing.JTable();
        labelInterventi = new javax.swing.JLabel();
        labelTipi = new javax.swing.JLabel();
        labelPatologie = new javax.swing.JLabel();
        pulsanteEsci = new javax.swing.JButton();
        pulsanteHome = new javax.swing.JButton();
        pulsanteEsci1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(registerDialog.getString("TITLE")); // NOI18N
        setMinimumSize(null);
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        headerRipPathologiesPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/decorazioniFinestre/DialogoStorico.png"))); // NOI18N

        tabellaInterventi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabellaInterventi.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tabellaInterventi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                interventionsTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tabellaInterventi);

        tabellaTipi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabellaTipi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	typesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabellaTipi);

        tabellaPatologie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabellaPatologie);

        labelInterventi.setFont(labelInterventi.getFont().deriveFont(labelInterventi.getFont().getStyle() | java.awt.Font.BOLD, 14));
        labelInterventi.setForeground(new java.awt.Color(255, 255, 255));
        labelInterventi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelInterventi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/barre/Azzurra.png"))); // NOI18N
        labelInterventi.setText(registerDialog.getString("DialogoStorico.labelInterventi.text")); // NOI18N
        labelInterventi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelTipi.setFont(labelTipi.getFont().deriveFont(labelTipi.getFont().getStyle() | java.awt.Font.BOLD, 14));
        labelTipi.setForeground(new java.awt.Color(255, 255, 255));
        labelTipi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTipi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/barre/Verde.png"))); // NOI18N
        labelTipi.setText(registerDialog.getString("DialogoStorico.labelTipi.text")); // NOI18N
        labelTipi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelPatologie.setFont(labelPatologie.getFont().deriveFont(labelPatologie.getFont().getStyle() | java.awt.Font.BOLD, 14));
        labelPatologie.setForeground(new java.awt.Color(255, 255, 255));
        labelPatologie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPatologie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/barre/arancione.png"))); // NOI18N
        labelPatologie.setText(registerDialog.getString("DialogoStorico.labelPatologie.text")); // NOI18N
        labelPatologie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pulsanteEsci.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/pulsanti/arresta.png"))); // NOI18N
        pulsanteEsci.setText(registerDialog.getString("DialogoStorico.pulsanteEsci.text")); // NOI18N
        pulsanteEsci.setToolTipText(registerDialog.getString("DialogoStorico.pulsanteEsci.toolTipText")); // NOI18N
        pulsanteEsci.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pulsanteEsci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	quitActionPerformedButton(evt);
            }
        });

        pulsanteHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/pulsanti/home.png"))); // NOI18N
        pulsanteHome.setText(registerDialog.getString("DialogoStorico.pulsanteHome.text")); // NOI18N
        pulsanteHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pulsanteHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	homeActionPerformedButton(evt);
            }
        });

        pulsanteEsci1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adisys/server/img/pulsanti/indietro.png"))); // NOI18N
        pulsanteEsci1.setText(registerDialog.getString("DialogoStorico.pulsanteEsci1.text")); // NOI18N
        pulsanteEsci1.setToolTipText(registerDialog.getString("DialogoStorico.pulsanteEsci1.toolTipText")); // NOI18N
        pulsanteEsci1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	quit1ActionPerformedButton(evt);
            }
        });

        jLabel1.setText(registerDialog.getString("SPIEGAZIONE")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerRipPathologiesPic)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pulsanteEsci)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pulsanteHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pulsanteEsci1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelInterventi)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTipi)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelPatologie))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerRipPathologiesPic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInterventi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPatologie)
                    .addComponent(labelTipi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulsanteEsci)
                    .addComponent(pulsanteHome)
                    .addComponent(pulsanteEsci1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
         String msg = registerDialog.getString("SEI SICURO DI VOLER USCIRE DAL PANNELLO?");
        if(GMessage.confirm(msg) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }                                  

    private void interventionsTableMouseClicked(java.awt.event.MouseEvent evt) {                                               
       int rigaSel = tabellaInterventi.getSelectedRow();
       int colonnaID = tabellaInterventi.getColumnModel().getColumnIndex(InterventoMySqlDAO.NOME_COLONNA_ID);
       int id = Integer.valueOf(tabellaInterventi.getValueAt(rigaSel, colonnaID).toString());
       DefaultTableModel modelloTipiIntervento = getInterventionTypes(id);
       tabellaTipi.setModel(modelloTipiIntervento);
                
       DefaultTableModel modelloPatologieTipoIntervento = getInterventionPathologies(Integer.valueOf(tabellaInterventi.getValueAt(rigaSel, colonnaID).toString()));
       tabellaPatologie.setModel(modelloPatologieTipoIntervento);
        
    }                                              

    private void typesTableMouseClicked(java.awt.event.MouseEvent evt) {                                         
         ArrayList<PatologiaTO> listaCorrente = new ArrayList<>();
         int rigaCorrente = tabellaTipi.getSelectedRow();
         FC = RequestManager.getFCInstance();
         int colonnaID = tabellaInterventi.getColumn(InterventoMySqlDAO.NOME_COLONNA_ID).getModelIndex();
         int idInt = Integer.parseInt(tabellaInterventi.getValueAt(tabellaInterventi.getSelectedRow(), colonnaID).toString());
             
         InterventoTO to = new InterventoTO();
         to.setID(idInt);
         ArrayList<Record<String, Object>> params = new ArrayList<>();
         params.add(new Record<String, Object>("business.intervento.InterventoTO", to));
         try {
             to = (InterventoTO) FC.processRequest("visualizzaIntervento", params);
         } catch (MainException ex) {
             Logger.getLogger(DialogoStorico.class.getName()).log(Level.SEVERE, null, ex);
         }
         TipoIntervento tipoInterventoSelezionato = to.getTipoIntervento(rigaCorrente);
         listaCorrente = tipoInterventoSelezionato.getListaPatologie();
         
        
         int colonnaCodice = tabellaPatologie.getColumnModel().getColumnIndex(COLUMN_CODE_NAME);
         int colonnaNome = tabellaPatologie.getColumnModel().getColumnIndex(COLUMN_NAME);
         int colonnaGravita = tabellaPatologie.getColumnModel().getColumnIndex(SEVERITY_COLUMN_NAME);
         
         DefaultTableModel modello = (DefaultTableModel) tabellaPatologie.getModel();
         modello.setRowCount(listaCorrente.size());
          
         setModelPathologiesTable(modello);
            
         for(int i = 0; i < listaCorrente.size(); i++){
             tabellaPatologie.setValueAt(listaCorrente.get(i).getCodice(), i, 
                     colonnaCodice);
                 tabellaPatologie.setValueAt(listaCorrente.get(i).getNome(), i, 
                         colonnaNome);
                 tabellaPatologie.setValueAt(listaCorrente.get(i).getGravita(), i, colonnaGravita);
         }
    }                                        

    private void quitActionPerformedButton(java.awt.event.ActionEvent evt) {                                             
        if(GMessage.confirm(registerDialog.getString("SEI SICURO DI VOLER ABBANDONARE ADISYS?"))
                == JOptionPane.YES_OPTION) {
        System.exit(0);
        }
    }                                            

    private void homeActionPerformedButton(java.awt.event.ActionEvent evt) {                                             
        if(GMessage.confirm(registerDialog.getString("SEI SICURO DI VOLER TORNARE ALLA HOME?"))
        == JOptionPane.YES_OPTION) {
        this.dispose();
        tmp.dispose();
        }
    }                                            

    private void quit1ActionPerformedButton(java.awt.event.ActionEvent evt) {                                              

        String msg = registerDialog.getString("SEI SICURO DI VOLER TORNARE ALL'EDITOR DEGLI INFERMIERI");
        if(GMessage.confirm(msg) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }                                             

    public void setModelPathologiesTable(DefaultTableModel modello){
        	tabellaPatologie.setModel(modello);
        }
        
            
         private VariableTableModel getEmptyPathologiesModel() {
            //Intestazioni
            VariableTableModel tabellaPatologieVuota = new VariableTableModel();
            tabellaPatologieVuota.addColumn(PatologiaMySqlDAO.NOME_COLONNA_CODICE);
            tabellaPatologieVuota.addColumn(PatologiaMySqlDAO.NOME_COLONNA_NOME);
            tabellaPatologieVuota.addColumn(InterventoMySqlDAO.NOME_COLONNA_GRAVITA_PATOLOGIE_TIPI_INTERVENTI);
           
            //Creazione modello
            return tabellaPatologieVuota;
       }
         
        public DefaultTableModel getInterventionPathologies(int IDIntervento) {
        DefaultTableModel modelloPatologie = getEmptyPathologiesModel();
        //Recupero dati sui tipi di intervento
        InterventoTO to = new InterventoTO();
        to.setID(IDIntervento);
        ArrayList<Record<String, Object>> params = new ArrayList<>();
        params.add(new Record<String, Object>("business.intervento.InterventoTO", to));
        ArrayList<PatologiaTO> patologie = null;
        try {
            patologie = (ArrayList<PatologiaTO>) FC.processRequest("visualizzaPatologieIntervento", params);
        } catch (MainException ex) {
            Logger.getLogger(EditorInterventi.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(PatologiaTO t: patologie){
            String[] valori = {t.getCodice(),t.getNome(), String.valueOf(new Integer(t.getGravita()))};
            modelloPatologie.addRow(valori);
        }
        return modelloPatologie;            
     }
        
        public DefaultTableModel getInterventionTypes(int IDIntervento)
        {
            FC = RequestManager.getFCInstance();
            DefaultTableModel modelloTipi = getEmptyTypesModel();
            //Recupero dati sui tipi di intervento
             //TODO Caricamento numeri di cellulare
             InterventoTO to = new InterventoTO();
             to.setID(IDIntervento);
             ArrayList<Record<String, Object>> params = new ArrayList<>();
             params.add(new Record<String, Object>("business.intervento.InterventoTO", to));
             ArrayList<TipoIntervento> tipi = null;
             try {
                 tipi = (ArrayList<TipoIntervento>) FC.processRequest("visualizzaTipiIntervento", params);
             } catch (MainException ex) {
                 Logger.getLogger(EditorInterventi.class.getName()).log(Level.SEVERE, null, ex);
             }
           
            for(TipoIntervento t: tipi)
            {
                String[] valori = {t.getNome(),t.getNote()};
                modelloTipi.addRow(valori);
            }
            return modelloTipi;
                    
    }
        
            public static DefaultTableModel getEmptyTypesModel(){
            //Intestazioni
            String NOME_COLONNA_NOME_TIPO_INTERVENTO = registerDialog.getString("TIPO");
            String NOME_COLONNA_NOTE_TIPO_INTERVENTO = registerDialog.getString("NOTE");
            String[] colonne= { NOME_COLONNA_NOME_TIPO_INTERVENTO, NOME_COLONNA_NOTE_TIPO_INTERVENTO};
            
            //Creazione modello
            return new DefaultTableModel(colonne,0);
        }
            
	/**
	 * @param args the command line arguments
	 */
	public static void start() {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(DialogoStorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(DialogoStorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(DialogoStorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(DialogoStorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				DialogoStorico window = new DialogoStorico(new javax.swing.JFrame(), true);
				Dimension risoluzioneSchermo = Toolkit.getDefaultToolkit().getScreenSize();
				window.setLocation(new Point( (risoluzioneSchermo.width - window.getWidth()) /2, (risoluzioneSchermo.height - window.getHeight()) /2)  );

				window.setVisible(true);
			}
		});
	}

        public void updateTable() throws MainException{

        	COLUMN_CODE_NAME = PatologiaMySqlDAO.NOME_COLONNA_CODICE;
        	COLUMN_NAME = PatologiaMySqlDAO.NOME_COLONNA_NOME;
        	SEVERITY_COLUMN_NAME = InterventoMySqlDAO.NOME_COLONNA_GRAVITA_PATOLOGIE_TIPI_INTERVENTI;
            tabellaInterventi.setModel(tmp.getTabellaTipi());
                
	}//aggiorna tabella
        
 
                 

    @Override
    public void open() {
        start();
    }
 
}
